/*
 * Corne/crkbd keymap using ZMK
 * Based off of miryoku
 * https://github.com/hhoozzii/corny
 *
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Layer Definitions
#define DEFAULT 0
#define NAV     1
#define MEDIA   2
#define NUM     3
#define FUNC    4
#define MOUS    5
#define SYM     6


//  Homerow mod held behaviour
/ { 
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
    };


// HELD on each layer shows which key(s) are being held to access that layer
// #'s signify the split

    keymap {
        compatible = "zmk,keymap";
        
//layer 00
        default_layer {
// ---------------------------------------------------------------------------------------------------------
// ||     Q      |     W      |      E    |     R     |      T     | # |      Y     |      U     |      I     |     O      |     P      ||
// ||   A/LGUI   |   S/LALT   |   D/LCTL  |  F/LSFT   |      G     | # |      H     |    J/RSFT  |   K/RCTRL  |   L/RALT   |   '/RGUI   ||
// ||     Z      |     X      |      C    |     V     |      B     | # |      N     |      M     |      ,     |      .     |     /      ||
//                        |ltMEDIAESC|lt NAV SPC|ltMOUS TAB| # |lt SYM RET|ltNUM BKSP|ltFUNC DEL|

            bindings = <
&trans &kp Q         &kp W         &kp E         &kp R         &kp T              &kp Y         &kp U         &kp I         &kp O         &kp P         &trans
&trans &hm LGUI A    &hm LALT S    &hm LCTL D    &hm LSFT F    &kp G              &kp H         &hm RSFT J    &hm RCTL K    &hm RALT L    &hm RGUI APOS &trans
&trans &kp Z         &kp X         &kp C         &kp V         &kp B              &kp N         &kp M         &kp CMMA      &kp DOT       &kp FSLH      &trans
                                   &lt MEDIA ESC &lt NAV SPC   &lt MOUS TAB       &lt SYM RET   &lt NUM BKSP  &lt FUNC DEL
            >;
        };
        
//layer 01
        navigation {
// ---------------------------------------------------------------------------------------
// ||            |            |            |            |            | # |   Redo     |    Paste   |    COPY    |     Cut    |   Undo     ||
// ||    LGUI    |    LALT    |    LCTL    |    LSFT    |            | # |   caps     |    lft     |    DWN     |     Up     |   RGT      ||
// ||            |    RALT    |            |            |            | # |   insert   |   home     |    pgdn    |    pgup    |   end      ||
//                            |            |    HELD    |            | # |   enter    |    BKSP    |    DEL     |

            bindings = <
&trans &trans        &trans        &trans        &trans        &trans             &kp C_AC_REDO &kp PSTE      &kp COPY      &kp CUT       &kp UNDO      &trans    
&trans &kp LGUI      &kp LALT      &kp LCTL      &kp LSFT      &trans             &kp CAPS       &kp LARW     &kp DARW      &kp UARW      &kp RARW      &trans
&trans &kp RALT      &trans        &trans        &trans        &trans             &kp INS        &kp HOME     &kp PGDN      &kp PGUP      &kp END       &trans
                                   &trans        &trans        &trans             &kp RET        &kp BKSP     &kp DEL
            >;  
        };

//layer 02
        media {
// -------------------------------------------------------------------------------------
// ||  BT_CLEAR  |            |            |            |            | # |            |            |            |            |            ||
// ||            |  BT_SEL 4  |  BT_SEL 5  |  BT_SEL 6  |            | # |            |    PREV    |    VOLD    |    VOLU    |    NEXT    ||
// ||            |  BT_SEL 1  |  BT_SEL 2  |  BT_SEL 3  |            | # |            |            |            |            |            ||
//                            |    HELD    |  BT_SEL 0  |            | # |    STOP    |    PLAY    |    MUTE    |

            bindings = <
&trans &bt BT_CLR    &trans        &trans        &trans        &trans             &trans        &trans        &trans        &trans        &trans        &trans       
&trans &trans        &bt BT_SEL 4  &bt BT_SEL 5  &bt BT_SEL 6  &trans             &trans        &cp M_PREV    &cp M_VOLD    &cp M_VOLU    &cp M_NEXT      &trans
&trans &trans        &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &trans             &trans        &trans        &trans        &trans        &trans          &trans
                                   &trans        &bt BT_SEL 0  &trans             &cp M_STOP    &cp M_PLAY    &cp M_MUTE
            >;
        };

//layer 03
        numbers {
// ---------------------------------------------------------------------------------
// ||    [{      |      7     |     8      |     9      |     ]}     | # |            |            |            |            |            ||
// ||      ;:    |      4     |     5      |     6      |     =+     | # |            |    RSFT    |    RCTRL   |    RALT    |     RGUI   ||
// ||      `~    |      1     |     2      |     3      |     \|     | # |            |            |            |    LALT    |            || 
//                            |     .      |     0      |     -_     | # |            |     HELD   |            |

            bindings = <
&trans &kp LBKT      &kp NUM_7     &kp NUM_8     &kp NUM_9     &kp RBKT           &trans        &trans        &trans        &trans        &trans        &trans    
&trans &kp SEMI      &kp NUM_4     &kp NUM_5     &kp NUM_6     &kp EQL            &trans        &kp RSFT      &kp RCTL      &kp RALT      &kp RGUI      &trans
&trans &kp GRAVE     &kp NUM_1     &kp NUM_2     &kp NUM_3     &kp BSLH           &trans        &trans        &trans        &kp LALT      &trans        &trans    
                                   &kp DOT       &kp NUM_0     &kp MINUS          &trans        &trans        &trans
            >;
        };

//layer 04
        function_keys {
// -------------------------------------------------------------------------------------
// ||    F12    |     F7     |     F8     |     F9     |   PTSRN    | # |            |            |            |            |            ||
// ||    F11    |     F4     |     F5     |     F6     |   SCRLL    | # |            |    RSFT    |    RCTRL   |    RLALT   |    RLGUI   ||
// ||    F10    |     F1     |     F2     |     F3     |   PAUSE    | # |            |            |            |    LALT    |            || 
//                           |     ESC    |     SPC    |    TAB     | # |            |            |    HELD    |
 
            bindings = <
&trans &kp F12       &kp F7        &kp F8        &kp F9        &kp PRSC           &trans        &trans        &trans        &trans        &trans        &trans        
&trans &kp F11       &kp F4        &kp F5        &kp F6        &kp SLCK           &trans        &kp LSFT      &kp LCTL      &kp LALT      &kp LGUI      &trans
&trans &kp F10       &kp F1        &kp F2        &kp F3        &kp PAUSE_BREAK    &trans        &trans        &kp RALT      &trans        &trans        &trans        
                                   &kp ESC       &kp SPC       &kp TAB            &kp LGUI      &trans        &trans        
            >;
        };

//layer 05
        mouse_keys {
// -------------------------------------------------------------------------------------
// ||     {      |     &      |      *     |      (     |      )     | # |            |            |            |            |            ||
// ||      :     |     $      |      %     |      ^     |      +     | # |            |    RSFT    |    RCTL    |    RALT    |    RGUI    ||
// ||            |     !      |      @     |      #     |      |     | # |            |            |            |    LALT    |            ||
//                            |            |            |            | # |    HELD    |            |            |

            bindings = <
&trans &trans        &trans        &trans        &trans        &trans             &trans        &trans        &trans        &trans        &trans        &trans           
&trans &kp LGUI      &kp LALT      &kp LCTL      &kp LSFT      &trans             &trans        &kp RSFT      &kp RCTL      &kp RALT      &kp RGUI      &trans        
&trans &kp RALT      &trans        &trans        &trans        &trans             &trans        &trans        &trans        &kp LALT      &trans        &trans        
                                   &trans        &trans        &trans             &trans        &trans        &trans        
            >;
        };  
        
//layer 06        
        symbols {
// -------------------------------------------------------------------------------------
// | - |            |            |            |            |            | # |    redo    |    paste   |    copy    |     cut    |    undo    | - |
// | - |    LGUI    |    LALT    |    LCTL    |    LSFT    |            | # |            |    ms_l    |    ms_d    |     ms_u   |   ms_r     | - |
// | - |            |            |            |            |            | # |            |    wh_l    |    wh_d    |     wh_u   |   wh_r     | - |
//                               |            |            |            | # |   btn1     |    btn3    |    btn2    |

            bindings = <
&trans &trans        &trans        &trans        &trans        &trans             &kp C_AC_REDO &kp PSTE      &kp COPY      &kp CUT       &kp UNDO      &trans    
&trans &kp LGUI      &kp LALT      &kp LCTL      &kp LSFT      &trans             &trans        &trans        &trans        &trans        &trans        &trans
&trans &kp RALT      &trans        &trans        &trans        &trans             &trans        &trans        &trans        &trans        &trans        &trans    
                                   &trans        &trans        &trans             &kp LGUI      &trans        &trans
            >;
        };        
    };
};
